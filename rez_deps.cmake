## boost options
set(BUILD_SHARED_LIBS ON)
set(Boost_USE_SHARED_LIBS ON)
set(Boost_USE_RELEASE_LIBS ON)
set(Boost_FIND_QUIETLY OFF)

# USD Build Options

set(PXR_STRICT_BUILD_MODE OFF)
set(PXR_VALIDATE_GENERATED_CODE OFF)
set(PXR_HEADLESS_TEST_MODE OFF)

set(PXR_ENABLE_NAMESPACES ON)

# USD Extras

set(PXR_BUILD_TESTS OFF)
set(PXR_BUILD_EXAMPLES OFF)
set(PXR_BUILD_TUTORIALS OFF)
set(PXR_BUILD_DOCUMENTATION OFF)

set(PXR_BUILD_USD_TOOLS ON)

# USD Imaging Options

set(PXR_BUILD_IMAGING ON)
set(PXR_ENABLE_GL_SUPPORT ON)
set(PXR_BUILD_USD_IMAGING ON)
set(PXR_BUILD_USDVIEW OFF)

# USD Python Support

set(PXR_ENABLE_PYTHON_SUPPORT ON)
set(PXR_USE_PYTHON_3 OFF)

# External Plugins

set(PXR_BUILD_ALEMBIC_PLUGIN OFF)
set(PXR_ENABLE_HDF5_SUPPORT OFF)

set(PXR_ENABLE_OSL_SUPPORT OFF)
set(PXR_ENABLE_PTEX_SUPPORT OFF)
set(PXR_ENABLE_OPENVDB_SUPPORT ON)
set(PXR_BUILD_DRACO_PLUGIN OFF)
set(PXR_BUILD_PRMAN_PLUGIN OFF)
set(PXR_BUILD_MATERIALX_PLUGIN OFF)
set(PXR_BUILD_EMBREE_PLUGIN OFF)
set(PXR_BUILD_OPENIMAGEIO_PLUGIN ON)
set(PXR_BUILD_OPENCOLORIO_PLUGIN ON)

# External Deps Paths

# file(TO_CMAKE_PATH "$ENV{BOOST_ROOT}" BOOST_ROOT)
# file(TO_CMAKE_PATH "$ENV{BOOST_INCLUDE_DIR}" Boost_INCLUDE_DIR)

file(TO_CMAKE_PATH $ENV{TBB_ROOT} TBB_ROOT_DIR)

file(TO_CMAKE_PATH $ENV{OPENEXR_INCLUDE_DIR} OPENEXR_INCLUDE_DIR)
file(TO_CMAKE_PATH $ENV{OPENEXR_ROOT} OPENEXR_LOCATION)

file(TO_CMAKE_PATH $ENV{OPENVDB_INCLUDE_DIR} OPENVDB_INCLUDE_DIR)

# These are both needed because \USD\pxr\imaging\glf\CMakeLists.txt doesnt include openexr headers when building with openvdb...
# Noone else has Issued this on GH, so maybe our OpenVDB build shouldnt have exr? 
set(OPENVDB_INCLUDE_DIR "${OPENVDB_INCLUDE_DIR};${OPENEXR_INCLUDE_DIR}")
add_definitions(-D_USE_MATH_DEFINES)
